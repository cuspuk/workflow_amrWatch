reads__trimming: # Required only if "trimming" in main "flow" element. See https://cutadapt.readthedocs.io/en/stable/guide.html#read-processing-stages
  cut_from_start_r1: null # null/int: Removes a specified number of bases from the beginning of the R1 read.
  cut_from_start_r2: null # null/int: Removes a specified number of bases from the beginning of the R2 read.
  cut_from_end_r1: null # null/int: Removes a specified number of bases from the end of the R1 read.
  cut_from_end_r2: null # null/int: Removes a specified number of bases from the end of the R2 read.
  quality_cutoff_from_3_end_r1: 20 # int(20): Removes lower quality bases from the 3' end of the R1 read.
  quality_cutoff_from_5_end_r1: 20 # int(20): Removes lower quality bases from the 5' end of the R1 read.
  quality_cutoff_from_3_end_r2: 20 # int(20): Removes lower quality bases from the 3' end of the R2 read.
  quality_cutoff_from_5_end_r2: 20 # int(20): Removes lower quality bases from the 5' end of the R2 read.
  nextseq_trimming_mode: false # bool(false): Modify quality-trimming algorithm to expect two-color chemistry data (NextSeq).
  do_adapter_removal: true # bool(false): Whether to do adapter removal or not.
  adapter_removal: # Relevant only if do_adapter_removal is set to true.
    action: "trim" # enum(trim): Defines an action to perform with the found adapter. Allowed: 'retain','trim','mask','none','lowercase'.
    overlap: 3 # int(3): Minimum number of bases required to overlap with the adapter.
    error_rate: 0.1 # float(0.1): Error tolerance used when searching for adapter.
    times: 1 # int(1): How many times to repeat adapter removal.
    keep_trimmed_only: false # bool(false): Discard reads with no adapters found.
    adapters_anywhere_file: "test_data/adapters.fa" # null/str: Fasta file path with adapters to be matched 'anywhere'.
    adapters_3_end_file: null # null/str: Fasta file path with adapters to be matched at 3'end.
    adapters_5_end_file: null # null/str: Fasta file path with adapters to be matched at 5'end.

  shorten_to_length: 500 # null/int: Shorten each read to the specified length. Corresponds to the cutadapt length parameter.
  trim_N_bases_on_ends: true # bool(false): Set to true to trim 'N' bases on ends.
  min_length_r1: 10 # null/int: Discards R1 reads shorter than this. Recommended to set at least to 1, to discard empty reads.
  min_length_r2: 10 # null/int: Discards R2 reads shorter than this. Recommended to set at least to 1, to discard empty reads.
  max_length_r1: null # null/int: Discards R1 reads longer than this value.
  max_length_r2: null # null/int: Discards R2 reads longer than this value.
  max_n_bases: 3 # null/int: Removes reads with more 'N' bases than the specified number.
  max_expected_errors: 3 # null/int: Discard reads whose expected number of errors exceeds this value.

foreign_contamination:
  kraken_dir: "path_to_kraken/k2_viral_20230314" # Directory containing kraken DB files. If does not exist, will be downloaded using the dirname.
  save_memory: true # If true, kraken limits RAM memory usage but sacrifices speed.
  read_length: 50 # Distribution will be used from this read length (default: 50).
  classification_level: "G" # The taxa level at which bracken reestimation happens. Allowed: "K", "P", "C", "O", "F", "G" (default: "G").
  bracken_threshold: 10 # Minimum number of reads assigned to the taxa level to receive additional reads from higher taxa levels during bracken abundance estimation (default: 10).
  abundance_check_fraction: 0.01 # Declare taxon as abundant if fraction is higher than this value. Specify values from 0-1 (default: 0.01).
  max_human_fraction: 0.5 # Maximum fraction of human reads in the sample as given by bracken. FAIL check - If higher, the workflow does not proceed to the next stage.

min_basepairs_for_assembly: 50000 # Minimum number of basepairs for assembly. FAIL check - If the assembly is shorter, the workflow does not proceed to the next stage.

assembly__unicycler:
  min_fasta_length: 200 # Shorter contigs than this are removed (default: 100).
  bridging_mode: "normal" # Allowed: "conservative", "normal", "bold". Trade-off between contig length and misassembly rate (default: "normal").
  linear_seqs: 0 # The expected number of linear sequences (default: 0).
  min_length_in_bp: 500000 # Threshold for minimum assembly length. This is a FAIL check - workflow does not proceed to the next stage.
  max_length_in_bp: 10000000 # Threshold for maximum assembly length. This is a FAIL check - workflow does not proceed to the next stage.
  use_long_if_relevant: True # If True and long reads are provided from config/pep/samples.csv, they will be used. Set to False to ignore long reads.

gtdb_dirpath: "undownloadable/gtdb-tk/gtdbtk-2.3.2_20231116/" # Path with db/ subdir containing GTDB
abricate:
  db_dir: "resources/abricate_db/2024-03-14/vfdb" # Path to abricate DB. If does not exist, will be downloaded.
  min_identity: 75 # Minimum identity of the query sequence to the database sequence (default: 75).
  min_coverage: 75 # Minimum coverage of the query sequence by the database sequence (default: 0).

amrfinder_db_dir: "resources/amrfinder_db/2023-11-15.1"
spatyper_db_dir: "resources/spatyper_db/2024-01-31"
SCCmec_db_dir: "resources/SCCmec_db/2024-01-31"
ncbi_plasmid_db_dir: "resources/ncbi_plasmid_db/2024-02-07" # For Mob-suite. Path to NCBI plasmid database directory. If it does not exist, the latest version will be downloaded.
rgi_db_dir: "resources/rgi_db/2024-02-09/" # Path to the RGI amr database. If it does not exist, the latest version will be downloaded.
mlst_db_dir: "undownloadable/mlst_db/2024-01-12/" # Path to the MLST database. Must be provided and contain blast and pubmlst data.

resfinder:
  db_dir: "resources/resfinder_db/2024-02-10" # Path to resfinder database directory. If it does not exist, will be downloaded using the dirname - DB version.
  min_coverage: 0.6 # Minimum (breadth-of) coverage of ResFinder within the range 0-1 (default: 0.6).
  threshold: 0.8 # Threshold for identity of ResFinder within the range 0-1 (default: 0.8).
  input_to_use: "reads" # Allowed: ["assembly", "reads"]. If "assembly", resfinder is run on assembly. If "reads", resfinder is run on reads (of last processed step).

self_contamination:
  polymorph_rate: 0.2 # Variant rows with MAF larger than this value are declared as polymorph.
  max_ambiguous_rows: 200 # Threshold for polymorph rows. Check fails if this threshold is exceeded.
  check_level: "WARN" # Allowed: ["FAIL", "WARN"]. If "FAIL", the workflow proceeds to the next stage. If "WARN", the workflow proceeds to the next stage but with a warning.

coverage_check:
  warn_threshold: 50 # Soft threshold for mean coverage. Lower coverage than this results in WARN row.
  fail_threshold: 20 # Hard threshold for mean coverage. Lower coverage than this results in FAIL row.

clonal_complex:
  db_dir: "resources/others/mlst_profiles_cc/2024-03-27/" # Path to the MLST database. Must be provided and contain blast and pubmlst data.
  # Profiles are downloaded from the https://pubmlst.org/data/ database, and stored in the above-mentioned path
  # Ensure, that each profile is a .tsv format having at least these columns: "ST" and "clonal_complex" in the header.
  mapping_to_gtdbtk_names: # Here define mapping from MLST names to GTDBTK names using regex. If not provided, clonal_complex is NOT produced at all.
    efaecium: "Enterococcus.* faecium.*"
    saureus: "Staphylococcus.* aureus.*"

in_silico_PCR:
  do: true # If true, in silico PCR is run. If false, in silico PCR is skipped.
  primers: # Array of amplicons to search for. Each amplicon is defined by a name and two primers.
    - "stx1a,CCTTTCCAGGTACAACAGCGGTT,GGAAACTCATCAGATGCCATTCTGG"
    - "stx1c,CCTTTCCTGGTACAACTGCGGTT,CAAGTGTTGTACGAAATCCCCTCTGA"
    - "stx2a-R2,GCGATACTGRGBACTGTGGCC,CCGKCAACCTTCACTGTAAATGTG"
    - "stx2b-R3,GCGATACTGRGBACTGTGGCC,GGCCACCTTCACTGTGAATGTG"
    - "stx2b-F1,AAATATGAAGAAGATATTTGTAGCGGC,CAGCAAATCCTGAACCTGACG"
  max_mismatches: null # null or INT - max mismatch when matching primers, no degenerate bases allowed. Set to null to ignore this setting.
  output_amplicon: True # Bool - if True, amplicon sequences are outputted as the last column in BED.

pneumokity_source_dir: "resources/pneumokity/2024-03-27" # Path to the pneumokit cloned source repository.

### RESOURCES #############################

max_threads: 2
max_mem_mb: 6000

resources:
  reads__trimming_mem_mb: 4096
  fastqc_mem_mb: 2048
  assembly__unicycler_mem_mb: 4096
  gtdb_classify__mem_mb: 4096
  mapping__mem_mb: 4096
  mapping_postprocess__mem_mb: 4096

threads:
  reads__trimming: 2
  fastqc: 1
  assembly__unicycler: 2
  kraken: 2
  bracken: 2
  gtdb__classify: 2
  amrfinder: 2
  mapping: 2
  mapping_postprocess: 2
